{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","escriba","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onClick","onChange","target","protoType","PropTypes","func","isRequired","getGifts","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFecthGifts","GifExpertApp","categorias","categ","ReactDOM","render","document","getElementById"],"mappings":"sMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACnBC,EAAU,mBAD4B,EAERC,mBAASD,GAFD,mBAErCE,EAFqC,KAEzBC,EAFyB,KAuB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BT,GAAc,SAAAU,GAAM,OAAMP,GAAN,mBAAoBO,OACxCN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,QAxBQ,WACZV,IAAeF,GACfG,EAAc,KAuBVU,SAnBc,SAACR,GACvBF,EAAcE,EAAES,OAAOH,aAwB/Bb,EAAYiB,UAAY,CACpBhB,cAAeiB,IAAUC,KAAKC,Y,mCCvCrBC,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACiCC,UAAWH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCERO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,4BAAIA,QCHDO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECDX,SAACA,GAAe,IAAD,EACdnB,mBAAS,CAC/B0B,KAAK,GACLa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAqBxC,OAfAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAW,WAEPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEd,UAGX,CAACpB,IAEGqB,EDlBwBM,CAAc3B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDhB,IACtDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEmBvBiB,EA/BM,WAAM,MAGa/C,mBAAS,CAAC,SAHvB,mBAGhBgD,EAHgB,KAGJlD,EAHI,KAYvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEQkD,EAAWpB,KAAK,SAAAqB,GAAK,OACjB,cAAC,EAAD,CAEI9B,UAAa8B,GADNA,Y,MCnBnCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.33e8c4aa.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const escriba = 'Escriba aquí.';\r\n    const [inputValue, setInputValue] = useState(escriba);\r\n\r\n    const handleClear = () =>{\r\n        if (inputValue === escriba) {\r\n            setInputValue('');            \r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    };\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorias(categs => [ inputValue,...categs]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onClick = {handleClear}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.protoType = {\r\n    setCategorias: PropTypes.func.isRequired\r\n};","export const getGifts = async(categoria) => {\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI( categoria)}&limit=10&api_key=p8rzj4e8WJCHOfgGYvaFQydbT8y1kJdz`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n          <img src= {url} alt= {title} />\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFecthGifts } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n    \r\n    const {data:images, loading} = useFecthGifts(categoria);\r\n     \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__rubberBand\">{categoria}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key= {img.id}\r\n                            {...img }\r\n                        />\r\n                        \r\n                        // img.title\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFecthGifts = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifts(categoria)\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                    \r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n                },500);\r\n            });\r\n\r\n    }, [categoria]);\r\n\r\n    return state;\r\n};","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n    //const categorias = ['Carpintería','Pinturería','Electricidad'];\r\n\r\n    const [categorias, setCategorias] = useState(['Surf']);\r\n\r\n    // const handleAdd = () => {\r\n    //     const categoria = 'Herramientas';\r\n    //     // const newCategorias = categorias.concat(categoria);\r\n    //     // setcategorias(newCategorias);\r\n\r\n    //     setCategorias(categs => [...categs, categoria]);\r\n    // };\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias = {setCategorias}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categorias.map( categ => (\r\n                        <GifGrid \r\n                            key= { categ }    \r\n                            categoria ={ categ } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}